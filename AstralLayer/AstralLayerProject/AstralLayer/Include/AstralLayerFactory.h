/****************************************************************//**
 * @file AstralLayerFactory.h
 *******************************************************************/
#pragma once

/// @cond
/// 前方宣言
namespace AstralLayer
{
	class ATLIDevice;
}
enum class ATL_GRAPHIC_INTERFACE;
/// @endcond

namespace AstralLayerFactory
{
	/****************************************************************//**
	 * ファクトリークラス
	 *******************************************************************/
	class ATLIFactory
	{
	public:
		/****************************************************************//**
		 *  デバイスクラス作成関数
		 * 
		 * \return デバイスクラス
		 *******************************************************************/
		virtual AstralLayer::ATLIDevice* CreateDevice() = 0;

		/****************************************************************//**
		 *  解放
		 *******************************************************************/
		virtual void Release() = 0;
	};

	/****************************************************************//**
	 * ファクトリークラス作成関数
	 * 
	 * @param GraphicInterface [in] 描画で利用するインターフェース
	 * @return ファクトリークラス
	 *******************************************************************/
	ATLIFactory* CreateAstralFactory(ATL_GRAPHIC_INTERFACE GraphicInterface);
}